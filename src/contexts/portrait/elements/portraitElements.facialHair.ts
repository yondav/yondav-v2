/**
 * This module defines a function for constructing facial hair elements for a portrait generator.
 * It includes configurations for different facial hair types and fills.
 */

import { fillCursor } from '../../../styles';
import { defaultColors, defaultFacialHairFills } from '../portrait.constants';
import {
  type FacialHairType,
  type CreateElements,
  type Element,
  STATE,
} from '../portrait.types';

/**
 * Constructs facial hair elements based on the specified facial hair type, fill, and stroke.
 *
 * @param {Object} params - Parameters for constructing facial hair elements.
 * @param {FacialHairType} params.type - The type of facial hair (e.g., 'beard', 'stache').
 * @param {AttributeFills} params.fill - The fill colors for the facial hair.
 * @param {boolean | undefined} params.stroke - Whether to apply a stroke color to the facial hair.
 * @returns {Element[]} - An array of SVG elements representing the facial hair.
 */
export const facialHair: CreateElements<FacialHairType> = ({
  type = 'beard',
  fill,
  stroke,
  state = STATE.DEFAULT,
  colorAction
}) => {
  // SVG path data for different facial hair shapes.
  const d = {
    beard: `M603.3,342.1c-2.2,0.3-2.5,0.6-3.8,0.5c-0.9,0-1.9-0.1-2.8-0.3l-3.1-0.5 c-4.5-0.9-9-1.5-13.5-1.6c-2.5-0.1-4.9,0.3-7.3,1.2c-1.3,0.5-2.5,1.3-3.5,2.3c-3.5,3.2-5.8,8.3-8,13.2c-0.9,2-1.8,3.9-2.7,5.6 c-0.7,1.4-1.8,3-3.6,3c-1-0.1-2-0.6-2.7-1.4c-1.6-1.4-3.1-3-4.6-4.4c-3.8-3.8-7.8-7.7-12.8-10c-4.5-2.1-9.6-3-16.2-3 c-3.4,0-6.8,0.3-9.7,0.5c-5.8,0.5-11.2,5.5-15.9,9.9c-1.2,1.1-2.4,2.2-3.5,3.2c-0.7,0.6-3.1,3.8-3.6,4.3c-1.5,1.8-2,2.7-3.5,3.2 c-2.1,1-4.4,1.6-6.7,1.7h-0.1c-4,0-8.4-2.6-12.4-5.3c-1.5-1-11.6-8.9-13-8.9c-0.1,0-0.1,0-0.2,0c-1.2-0.1-2.4,0.5-2.9,1.7 c-0.1,0.3-0.2,0.6-0.3,0.9c-0.1,0.3-0.3,0.6-0.4,0.9c-1.1,2.4-2.7,4.4-4.9,5.9l-0.2,0.1l-8.2-2.5c-0.4-0.1-0.8-0.2-1.2-0.2 c-2.4,0-4.8,2-6.9,3.7c-0.7,0.5-1.3,1-1.8,1.5c-3,2.2-6.2,4.3-9.3,6.3c-1.6,1-3.1,2.1-4.7,3.1c-0.5,0.4-1.1,0.7-1.8,0.8h-0.4 c-0.5,0-1-0.1-1.5-0.3c-2.7-0.9-5.3-2.1-7.8-3.5c-2.4-1.5-5-2.7-7.7-3.6c-1.4-0.4-2.8-0.6-4.3-0.6c-3.1,0.1-6.3,0.7-9.3,1.6 c-1.4,0.4-2.9,0.8-4.4,1.1l-0.9,0.2c-0.7,0.1-1.3,0.2-2,0.2c-0.7,0-1.5-0.1-2.1-0.3c-1.2-0.5-2.2-1.4-2.6-2.7 c-0.7,2.1-0.6,5.2,0.4,9.4c0.7,3.2,1.8,6.4,2.5,8.8c0.2,0.6,0.4,1.1,0.5,1.6c3.8,11.9,9.1,23.1,14.3,34c0.9,1.9,1.8,3.7,2.6,5.6 c1.3,2.6,2.9,5,4.7,7.3c1.3,1.7,2.5,3.5,3.7,5.3c3.6,6.1,7.5,12,11.7,17.7c6.1,8.3,12.8,16.2,20,23.6c4.9,5,11.4,11.3,18.7,16 c15.1,9.7,30.4,14.6,45.5,14.6c24.6,0,47.5-13,66.4-37.5c12.8-16.8,23.5-35.2,31.9-54.6l0.2-0.6c5.4-12.5,11-25.5,13.4-39.1 C603.3,368.6,603.6,355.8,603.3,342.1z M536.8,396.3l-9,9.3c-1.1,1.1-2.3,2-3.7,2.8l-10.5,5.5c-4.8,2.5-10.1,4.1-15.6,4.6 l-31.4,2.9c-4.3,0.4-8.6,0.1-12.9-0.8l-18.9-4.1c-3.6-0.8-6.7-3.2-8.2-6.6l0,0c-2.3-5-3.5-10.4-3.5-15.9v-0.1l2.5-0.6l7.6-2.1 l0.7-0.1c2.4-0.5,4.9-0.5,7.3-0.2l0.7,0.1c1.3,0.2,2.7,0.3,4,0.3h8c1.6,0,3.2-0.1,4.8-0.2l14.7-1.2l5-0.4c1.1-0.1,2.2-0.3,3.3-0.6 l55.4-16.1l3.2,2.9c1.5,1.3,2.3,3.2,2.3,5.2v1.3C542.6,387.4,540.5,392.5,536.8,396.3z`,
    bigBeard: `M603.3,342.1c-2.2,0.3-2.5,0.6-3.8,0.5c-0.9,0-1.9-0.1-2.8-0.3l-3.1-0.5 c-4.5-0.9-9-1.5-13.5-1.6c-2.5-0.1-4.9,0.3-7.3,1.2c-1.3,0.5-2.5,1.3-3.5,2.3c-3.5,3.2-5.8,8.3-8,13.2c-0.9,2-1.8,3.9-2.7,5.6 c-0.7,1.4-1.8,3-3.6,3c-1-0.1-2-0.6-2.7-1.4c-1.6-1.4-3.1-3-4.6-4.4c-3.8-3.8-7.8-7.7-12.8-10c-4.5-2.1-9.6-3-16.2-3 c-3.4,0-6.8,0.3-9.7,0.5c-5.8,0.5-11.2,5.5-15.9,9.9c-1.2,1.1-2.4,2.2-3.5,3.2c-0.7,0.6-3.1,3.8-3.6,4.3c-1.5,1.8-2,2.7-3.5,3.2 c-2.1,1-4.4,1.6-6.7,1.7h-0.1c-4,0-8.4-2.6-12.4-5.3c-1.5-1-11.6-8.9-13-8.9c-0.1,0-0.1,0-0.2,0c-1.2-0.1-2.4,0.5-2.9,1.7 c-0.1,0.3-0.2,0.6-0.3,0.9c-0.1,0.3-0.3,0.6-0.4,0.9c-1.1,2.4-2.7,4.4-4.9,5.9l-0.2,0.1l-8.2-2.5c-0.4-0.1-0.8-0.2-1.2-0.2 c-2.4,0-4.8,2-6.9,3.7c-0.7,0.5-1.3,1-1.8,1.5c-3,2.2-6.2,4.3-9.3,6.3c-1.6,1-3.1,2.1-4.7,3.1c-0.5,0.4-1.1,0.7-1.8,0.8h-0.4 c-0.5,0-1-0.1-1.5-0.3c-2.7-0.9-5.3-2.1-7.8-3.5c-2.4-1.5-5-2.7-7.7-3.6c-1.4-0.4-2.8-0.6-4.3-0.6c-3.1,0.1-6.3,0.7-9.3,1.6 c-1.4,0.4-2.9,0.8-4.4,1.1l-0.9,0.2c-0.7,0.1-1.3,0.2-2,0.2c-0.7,0-1.5-0.1-2.1-0.3c-1.2-0.5-2.2-1.4-2.6-2.7 c-0.7,2.1-0.6,5.2,0.4,9.4c0.7,3.2,1.8,6.4,2.5,8.8c0.2,0.6,0.4,1.1,0.5,1.6c1.8,5.6,2,8.7,2.1,12.6c0.3,10.8,2.3,21.5,5.7,31.7 c3.6,10.4,8.8,25.3,11.5,29.1c6,8.2,12.7,34.2,33.4,49.8c0.7,0.5,1.3,1,1.9,1.6c14.8,13.4,51.7,29.4,66.5,29.4 c24.6,0,57.5-13,76.4-37.5c11.6-15.2,13.3-23.5,19.7-39.4c0.8-2.1,1.6-4.3,2.2-6.4c1.1-4,2.4-7.9,4.1-11.7l1.7-4 c2.8-6.4,4.6-13.2,5.8-20c0.4-2.4,1.2-4.6,1.4-6.1c1.6-14.5,3.1-18.7,2.9-28.4c-0.1-3.9,0.1-7.7,0.4-11.6 C604.9,366.5,603.6,353.9,603.3,342.1z M542.6,382.1c0,5.3-2.1,10.4-5.8,14.2l-9,9.3c-1.1,1.1-2.3,2-3.7,2.8l-10.5,5.5 c-4.8,2.5-10.1,4.1-15.6,4.6l-31.4,2.9c-4.3,0.4-8.6,0.1-12.9-0.8l-18.9-4.1c-3.6-0.8-6.7-3.2-8.2-6.6c-2.3-5-3.5-10.4-3.5-15.9 v-0.1l2.5-0.6l7.6-2.1l0.7-0.1c2.4-0.5,4.9-0.5,7.3-0.2l0.7,0.1c1.3,0.2,2.7,0.3,4,0.3h8c1.6,0,3.2-0.1,4.8-0.2l14.7-1.2l5-0.4 c1.1-0.1,2.2-0.3,3.3-0.6l55.4-16.1l3.2,2.9c1.5,1.3,2.3,3.2,2.3,5.2V382.1z`,
    civilWar: `M548.8,471.7c-6.7-4.3-2.3-16.4-6.2-30.2c-4-13.8,12.1-4,18.1-14.4c5.9-10.4,3-7.5,3-20.2 c0-12.7-7.1-12-13-17.3c-5.9-5.3-7.9-16.1-14.4-16.1c-6.5,0-24.9,6-40.9,11.2c-16,5.2-31.2,7.3-41.5,6.2c-11-1.2-26.4,1.1-33.3,3.4 c-6.9,2.3-2.5,11.3-3.7,18c-1.1,6.7,7.6,13.7,17.2,16.8c9.5,3.1,11.6,40.9,10,50c-1.7,9-19.1,3.8-19.1,3.8 c-7.2-7.4-13.9-15.3-20-23.6c-4.2-5.7-8.1-11.7-11.7-17.7c-1.1-1.8-2.3-3.6-3.7-5.3c-1.8-2.3-3.4-4.7-4.7-7.3 c-0.9-1.9-1.8-3.7-2.6-5.6c-5.2-10.9-10.5-22.1-14.3-34c-0.1-0.5-0.3-1-0.5-1.6c-0.8-2.3-1.8-5.5-2.5-8.8c-0.9-4.2-1.1-7.4-0.4-9.4 c0.4,1.2,1.4,2.2,2.6,2.7c0.7,0.2,1.4,0.3,2.1,0.3c0.7,0,1.3-0.1,2-0.2l0.9-0.2c1.5-0.3,3-0.7,4.4-1.1c3-0.9,6.1-1.5,9.3-1.6 c1.4,0,2.9,0.2,4.3,0.6c2.7,0.9,5.3,2.1,7.7,3.6c2.5,1.5,5.1,2.6,7.8,3.5c0.5,0.2,1,0.2,1.5,0.3h0.4c0.6-0.1,1.3-0.4,1.8-0.8 c1.5-1,3.1-2.1,4.7-3.1c3.1-2,6.3-4.1,9.3-6.3c0.6-0.4,1.2-0.9,1.8-1.5c2.1-1.7,4.5-3.7,6.9-3.7c0.4,0,0.8,0.1,1.2,0.2l8.2,2.5 l0.2-0.1c2.1-1.5,3.8-3.6,4.9-5.9c0.1-0.3,0.3-0.6,0.4-0.9c0.1-0.3,0.2-0.6,0.3-0.9c0.5-1.1,1.7-1.7,2.9-1.7c0.1,0,0.1,0,0.2,0 c1.4,0,11.5,7.9,13,8.9c4,2.8,8.4,5.3,12.4,5.3h0.1c2.3-0.1,4.6-0.7,6.7-1.7c1.5-0.5,2-1.4,3.5-3.2c0.5-0.6,2.8-3.7,3.6-4.3 c1.1-1,2.3-2,3.5-3.2c4.8-4.4,10.2-9.4,15.9-9.9c2.9-0.2,6.3-0.5,9.7-0.5c6.6,0,11.7,0.9,16.2,3c5,2.3,8.9,6.2,12.8,10 c1.5,1.5,3,3,4.6,4.4c0.7,0.8,1.7,1.3,2.7,1.4c1.8,0,2.8-1.6,3.6-3c0.9-1.7,1.8-3.6,2.7-5.6c2.2-4.9,4.5-10,8-13.2 c1-1,2.2-1.7,3.5-2.3c2.3-0.8,4.8-1.2,7.3-1.2c4.6,0.2,9.1,0.7,13.5,1.6l3.1,0.5c0.9,0.2,1.9,0.3,2.8,0.3c1.3,0.1,1.6-0.2,3.8-0.5 c0.4,13.6,0.1,26.5-2.2,39.6c-2.4,13.6-8,26.5-13.4,39.1l-0.2,0.6c-8.3,19.4-19.1,37.8-31.9,54.6C555.5,476,555.5,476,548.8,471.7z`,
    goatee: `M553.2,369.3c-0.5-3.2-2-6.2-4.3-8.5c-0.4-0.4-0.8-0.8-1.2-1.2c-3.8-3.8-7.8-7.7-12.8-10 c-4.5-2.1-9.6-3-16.2-3c-3.4,0-6.8,0.3-9.7,0.5c-5.8,0.5-11.2,5.5-15.9,9.9c-1.2,1.1-2.4,2.2-3.5,3.2c-0.7,0.6-3.1,3.8-3.6,4.3 c-1.5,1.8-2,2.7-3.5,3.2c-2.1,1-4.4,1.6-6.7,1.7h-0.1c-4,0-8.4-2.6-12.4-5.3c-1.5-1-11.6-8.9-13-8.9c-0.1,0-0.1,0-0.2,0 c-1.2-0.1-2.4,0.5-2.9,1.7c-0.1,0.3-0.2,0.6-0.3,0.9c-0.1,0.3-0.3,0.6-0.4,0.9c-1.1,2.4-2.7,4.4-4.9,5.9l-0.2,0.1l-8.2-2.5 c-0.4-0.1-0.8-0.2-1.2-0.2c-2.4,0-4.8,2-6.9,3.7c-0.7,0.5-1.3,1-1.8,1.5c-3,2.2-6.2,4.3-9.3,6.3c-1.6,1-3.1,2.1-4.7,3.1 c-0.1,0-0.1,0.1-0.2,0.1c-1.1,0.6-1.8,1.8-1.7,3.1c0.9,7.8,7.2,32.1,7.6,46.1c0.8,29.4,3.3,48.9,10,56.9c4.9,5,11.4,11.3,18.7,16 c15.1,9.7,30.4,14.6,45.5,14.6c24.6,0,51.9-13,66.5-39.1c0,0-0.9-31.5-0.1-61.4C556,392.3,554.3,376.9,553.2,369.3z M535.8,459.1 c-0.5,7-34.6,4.3-35.5-6.7c-0.9-11,22-19.5,24.8-27.1c2.8-7.6,5.6-14.9,5.6-19.2c0-4.2-8.5,2.5-13.4,5.9s-19.3,9.6-31.6,11 c-12.3,1.4-27.3-2.3-27.3-2.3s-7.9-1.4-11.5-3s-4.8,2.5-5,10.1c-0.2,7.6,9.4,11,19,15.8c8.4,4.2,12.6,9.9,12.8,13.9 s-17,3.7-25.2,4.2s-12-20.9-15.9-29.1s-7.8-34.4-7-39.2s19.1-2.1,29.6-2.4c3.5-0.1,12.9,0.2,24.2-2.1c10.2-2.1,21.9-6.1,32.2-9 c14-3.9,25.5-6.7,27.2-7.8c4.5-2.8-1.7,35.6,0.4,44.4S536.3,452.2,535.8,459.1z`,
    hogan: `M405,446.3l4.8-50.5c0.1-1.4,0.2-2.8,0.2-4.2c0-4.3,1.3-16.9,3.9-18 c3.1-2,6.3-4.1,9.3-6.3c0.6-0.4,1.2-0.9,1.8-1.5c2.1-1.7,4.5-3.7,6.9-3.7c0.4,0,0.8,0.1,1.2,0.2l8.2,2.5l0.2-0.1 c2.1-1.5,3.8-3.6,4.9-5.9c0.1-0.3,0.3-0.6,0.4-0.9c0.1-0.3,0.2-0.6,0.3-0.9c0.5-1.1,1.7-1.7,2.9-1.7c0.1,0,0.1,0,0.2,0 c1.4,0,11.5,7.9,13,8.9c4,2.8,8.4,5.3,12.4,5.3h0.1c2.3-0.1,4.6-0.7,6.7-1.7c1.5-0.5,2-1.4,3.5-3.2c0.5-0.6,2.8-3.7,3.6-4.3 c1.1-1,2.3-2,3.5-3.2c15.1-12.5,22.2-10.4,25.7-10.4c6.6,0,11.7,0.9,16.2,3c5,2.3,8.9,6.2,12.8,10c0,0,0,0,0,0 c3.1,3.1,5.2,7.1,6,11.4c3.2,17.8,10.6,63.7,9.9,70.2c-0.3,2.7-10.1,27.3-12.6,26.3c-3.8-1.7-4.2-91.1-13.6-93.8 c-5.8-1.6-46.6,12.4-52.6,14.1s-8.7,2.4-22.7,3c-14,0.5-32.2-2.9-35.2-1.4c-7.1,3.6,0.4,78.2-1.2,79.6 C423.4,471.1,404.9,449.4,405,446.3z`,
    stache: `M410,396.3l0.1-3.5c-0.5-1.9,0.9-18,3.8-19.3c3.1-2,6.3-4.1,9.3-6.3 c0.6-0.4,1.2-0.9,1.8-1.5c2.1-1.7,4.5-3.7,6.9-3.7c0.4,0,0.8,0.1,1.2,0.2l8.2,2.5l0.2-0.1c2.1-1.5,3.8-3.6,4.9-5.9 c0.1-0.3,0.3-0.6,0.4-0.9c0.1-0.3,0.2-0.6,0.3-0.9c0.5-1.1,1.7-1.7,2.9-1.7c0.1,0,0.1,0,0.2,0c1.4,0,11.5,7.9,13,8.9 c4,2.8,8.4,5.3,12.4,5.3h0.1c2.3-0.1,4.6-0.7,6.7-1.7c1.5-0.5,2-1.4,3.5-3.2c0.5-0.6,2.8-3.7,3.6-4.3c1.1-1,2.3-2,3.5-3.2 c15.1-12.5,22.2-10.4,25.7-10.4c6.6,0,11.7,0.9,16.2,3c5,2.3,8.9,6.2,12.8,10c1.5,1.5,3,3,4.6,4.4c0.6,0.6,2.1,2.1,1.3,10.2 c-0.3,2.7-3.1,4.3-5.6,3.3c-3.8-1.7-9.1-5.5-12.6-4.8c-5.9,1.3-44.6,13.4-50.6,15.1s-8.7,2.4-22.7,3c-14,0.5-33.5-1.6-35.2-1.4 c-1.3,0.1-9.6,8.2-11.2,9.6C413.4,401.1,409.9,399.4,410,396.3z`,
  };

  // Determine the primary fill color for the facial hair.
  const primary = type === 'none' ? '' : (
    fill?.primary ??
    defaultFacialHairFills[type as keyof typeof defaultFacialHairFills].primary ??
    ''
  ).toString();

  /**
   * Constructs a facial hair element with the specified path data.
   *
   * @param {string} d - The path data for the facial hair.
   * @returns {Element} - An SVG element representing the facial hair.
   */
  const constructFacialHair = (d: string): Element => ({
    type: 'path',
    props: {
      fill: primary,
      style: fillCursor(state),
      stroke: stroke ? defaultColors.neutral[300] : '',
      onClick: () => {
        if (state === STATE.COLOR) colorAction('primary');
      },
      d,
    },
  });

  // Generate and return facial hair elements based on the facial hair type.
  switch (type) {
    case 'beard':
      return [constructFacialHair(d.beard)];

    case 'bigBeard':
      return [constructFacialHair(d.bigBeard)];

    case 'civilWar':
      return [constructFacialHair(d.civilWar)];

    case 'goatee':
      return [constructFacialHair(d.goatee)];

    case 'hogan':
      return [constructFacialHair(d.hogan)];

    case 'stache':
      return [constructFacialHair(d.stache)];

    case 'none':
      return []; // Return an empty array for no facial hair.
  }
};
